---
layout: essay
type: essay
title: "Smart Questions to Be Smarter"
# All dates must be YYYY-MM-DD format!
date: 2023-09-06
published: true
labels:
  - Questions
  - Answers
  - StackOverflow
---

<img width="300px" class="rounded float-start pe-4" src="../img/smart-questions/rtfm.png">

## Overcoming Anxiety
No matter what career, asking questions holds a significant value as it allows one to clear up any confusion and gain insight. As a software engineer, asking questions to gain more knowledge can help with code optimization, thus saving more time and overall becoming a better programmer. As an introvert, however, I do not like asking questions and often find myself avoiding them by attempting to answer my own questions. For me, asking is an anxiety-filled, overwhelming task as I fear the humiliation I may experience. However, I realized over time that I can overcome my anxiety if I ask efficient and effective questions. 

## One Question For All—Stack Overflow
More often than not, many people have similar questions. I realized this when it occurred to me multiple times when I would ask my friend a question about a certain topic or concept. Hoping for some clarification, my friend would reply with, “I was wondering the same thing too.” Asking good questions would not only benefit me but others who are struggling with the same topic as well. [Stack Overflow](https://stackoverflow.com/)is a place where developers can ask or answer questions, and others can view the discussion to help with their problems or questions. 

To receive a rapid and responsive answer to a question on Stack Overflow, questions must be valuable for responders to spend their valuable time on. Before posting a question, it is highly recommended that research is conducted to avoid redundancy. Even if there were no answers after searching for similar questions on Stack Overflow, other forums, or researching other resources, it is good practice to share the research that was done, as it indicates effort and willingness to learn. Questions should be posted to its appropriate and relevant forum, free of grammar and spelling errors. Headers should be professional, appropriate, and specific to the topic in question, and the problem or question should be as informative, precise, and specific as possible so that responders know exactly what is being asked. Assumptions or guesses must not be made, as any indication of incompetency should be avoided. Overall, to receive quality answers, questions posted on Stack Overflow should be precise, specific, demonstrating knowledge and understanding of the topic, and professional.

## Not So Smart Questions
To understand how to ask smart, good questions, we must first understand what kinds of questions to avoid asking. An example of a time-wasting question is [“How to print “/” in Python?”](https://stackoverflow.com/questions/32491682/how-to-print-in-python). 

In this example, the user simply asks, “How to get string / ```\```?” This is not a good question for multiple reasons. First and foremost, this question grammatically does not make sense and is not specific in terms of what the user wishes to know. Most importantly, this user could have easily found a solution to their problem by doing a quick, simple Google search on basic escape sequences in Python. This post indicates that this user did not make the effort to find solutions on their own before asking for help on Stack Overflow. Although this user did receive responses, the answers were basic information that could have been found on Google or other resources. By reading an example of a bad question to ask, I learned the importance of researching and finding potential solutions and answers before jumping on Stack Overflow to ask others for help, as it could save everyone’s time and avoid displaying incompetency. 

## Questions That Makes You Think 
Good questions often make others think before immediately sharing an answer. An example of a good, smart question is [“Why is processing a sorted array faster than processing an unsorted array?”](https://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-processing-an-unsorted-array). 

In this example, the user asks why sorted data runs faster than unsorted data. To demonstrate their question, the user included a code block in C++ with comments and a short summary of their results, which was that with ```std::sort(data, data + arraySize);``` their code runs in almost 2 seconds, whereas without it, it runs in almost 12 seconds. The user proceeded to share that they thought it was a language or compiler issue and they tested it with Java, which yielded similar results. A code block was also provided so that responders could test both C++ and Java if they wanted to see the results for themselves. At the end of the post, the user includes two clear, concise, and specific questions regarding their findings. To wrap up the post, the user leaves two links to related posts in Stack Overflow to demonstrate their done research. This question is a “smart” question, as it is a challenging question that cannot be answered by a quick Google search. Moreover, the user demonstrates an understanding of the topic and provides the necessary information to help respondents answer the question. 

By reading this example of a good, “smart” question, I learned how important it is to be as specific and informative as possible, as it makes it easy for both readers and responders to understand clearly what the issue is. I really liked how the user included a code block in both languages so that anyone can run it on their device to observe the difference in speed when running unsorted versus sorted data. This question is a good example of a smart question that is meaningful and worth the time to answer and even read. 
